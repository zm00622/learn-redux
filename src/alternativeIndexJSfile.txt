import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
// import * as serviceWorker from './serviceWorker';
import {createStore} from 'redux';


//STORE -> GLOBALIZED STATE


//ACTION INCREMENT
// Simple function that returns an object
const increment = () => {
  return {
    type: 'INCREMENT'
  }
}
const decrement = () => {
  return {
    type: 'DECREMENT'
  }
}

//REDUCER - See Notes below
const counter = (state = 0, action) => {
  switch(action.type) {
    case "INCREMENT":
      return state + 1;
    case "DECREMENT":
      return state -1;
  }
};

let store = createStore(counter);

// Display it in the console
store.subscribe(() => console.log(store.getState()));

//DISPATCH - See Notes below
store.dispatch(increment());

ReactDOM.render(
  // <React.StrictMode>
    <App />
  // </React.StrictMode>,
  ,
  document.getElementById('root')
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals

reportWebVitals();
// serviceWorker.unregister();


// DISPATCH NOTES:
// You dispatch an action. Once the Increment or Decrement action is dispatched, the REDUCER then looks
// at what was dispatched and performs the state change.

// REDUCER NOTES: Zero is the original state. Also, read the Dispatch notes if you need help understanding the Reducer.